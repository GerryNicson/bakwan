#
    setup.singkong
    Account setup
    part of Bakwan: simple accounting software
    
    Authors:
    Noprianto (nop@noprianto.com)
;

load_module("ui_calendar")

var default_fiscal_start = fn() {
    var n = part(@)
    return [
        n[0],
        1,
        format_date(date([n[0], 1, 1]))
    ]
}

var default_fiscal_end = fn() {
    var n = part(@)
    var z = len(days_of_month(n[0], 12))
    return [
        n[0],
        12,
        format_date(date([n[0], 12, z]))
    ]
}

var load_coa = fn(ctx, tbl) {
    config(tbl, "contents", accounts_template)
}

var set_account_code = fn(cmb, msk) {
    var c = get(cmb, "text")
    var m = get(msk, "contents")
    if (endswith(m, "_")) {
        var code = ac_types_code[c]
        config(msk, "contents", code)
    }
}

var account_dialog = fn(ctx, edit) {
    var cmb_type = component("combobox", ac_types_)
    d_cmb_border(cmb_type, _u("_account_type"))
    var msk_code = component("mask", ac_mask)
    config(msk_code, "border", _u("_code"))
    config(msk_code, "align", 2)
    var txt_desc = component("text", "")
    config(txt_desc, "border", _u("_description"))
    var btn_rst = c_btn_(_("cmd_reset"), 2, _m("cmd_reset"))
    var g = component("grid", "")
    d_grid(g)
    grid_add(g, cmb_type, 0, 0, 1, 1, 1, 0, 1, 1)
    grid_add(g, msk_code, 1, 0, 1, 1, 0.5, 0, 1, 1)
    grid_add(g, btn_rst, 2, 0, 1, 1, 0, 0, 0, 1)
    grid_add(g, txt_desc, 0, 1, 3, 1, 1, 0, 1, 1)

    set_account_code(cmb_type, msk_code)
    event(cmb_type, fn() {
        set_account_code(cmb_type, msk_code)
    })    

    event(btn_rst, fn() {
        config(msk_code, "contents", "")
    })

    if (!empty(edit)) {
        var a_type = edit["_account_type"]
        var a_code = edit["_code"]
        var a_desc = edit["_description"]
        config(cmb_type, "text", a_type)
        config(msk_code, "contents", a_code)
        config(txt_desc, "contents", a_desc)
    }

    return [g, cmb_type, msk_code, txt_desc]
}

var setup_form = fn(ctx) {
    var ret = {}
    var r = []

    var g = component("grid", "")

    var btn_save = c_btn_(_("cmd_save"), 0, _m("cmd_save"))
    var btn_close = c_btn_(_("cmd_close"), 5, _m("cmd_close"))

    var tc = c_text(_("label_company"))

    var gf = component("grid", "")
    config(gf, "border", _("label_fiscal_year"))
    var ts = component("label", upper(_("_start"), true))
    var te = component("label", upper(_("_end"), true))

    var dfs = default_fiscal_start()
    var ds = create_date_picker(dfs[0], dfs[1])
    config(ds[1], "contents", dfs[2])
    var dfe = default_fiscal_end()
    var de = create_date_picker(dfe[0], dfe[1])
    config(de[1], "contents", dfe[2])

    d_btn_s(ds[2])
    d_btn_s(de[2])

    grid_add(gf, ts, 0, 1, 1, 1, 0.1, 1, 0, 1)
    grid_add(gf, ds[0], 1, 1, 1, 1, 0.9, 1, 1, 1)
    grid_add(gf, te, 2, 1, 1, 1, 0.1, 1, 0, 1)
    grid_add(gf, de[0], 3, 1, 1, 1, 0.9, 1, 1, 1)

    var tbl_coa = component("table", _("table_coa"), true)
    table_center(tbl_coa, 1)
    var gp = component("grid", "")
    var g_tbl = component("grid", "")
    var b_coa_n = c_btn_(_("cmd_new"), 1, _m("cmd_new"))
    var b_coa_e = c_btn_(_("cmd_edit"), 3, _m("cmd_edit"))
    var b_coa_d = c_btn_(_("cmd_delete"), 2, _m("cmd_delete"))
    var g_btn = component("grid", "")
    grid_add(g_tbl, b_coa_n, 0, 0, 1, 1, 1, 0, 1, 1)
    grid_add(g_tbl, b_coa_e, 0, 1, 1, 1, 1, 0, 1, 1)
    grid_add(g_tbl, b_coa_d, 0, 2, 1, 1, 1, 0, 1, 1)
    grid_add(g_tbl, g_btn, 0, 3, 1, 1, 1, 1, 1, 1)
    grid_add(gp, tbl_coa, 0, 0, 1, 1, 1, 1, 3, 1)
    grid_add(gp, g_tbl,   1, 0, 1, 1, 0, 1, 2, 1)

    grid_add(g, tc[0], 0, 0, 4, 1, 1, 0, 1, 1)
    grid_add(g, gf, 0, 1, 4, 1, 1, 0, 1, 1)
    grid_add(g, gp, 0, 2, 4, 1, 1, 20, 3, 0)
    grid_add(g, btn_close, 1, 3, 1, 1, 1, 0, 0, 2)
    grid_add(g, btn_save, 2, 3, 1, 1, 1, 0, 0, 1)

    load_coa(ctx, tbl_coa)

    event(b_coa_n, fn() {
        var d = account_dialog(ctx, {})
        var r = panel_dialog(d[0], _("title_account_new"), 
            ctx["dialog_width"], ctx["dialog_height"])
        if (r == "OK") {
            var a = [
                get(d[1], "text"),
                get(d[2], "contents"),
                get(d[3], "contents")
            ]
            if (!is_valid_account(a)) {
                message(_("error_account_invalid"), _("title_error"))
            } else {
                message(a)
            }
        }
    })

    event(b_coa_e, fn() {
        var a = get(tbl_coa, "active")
        if (a < 0) {
            message(_("error_account_edit"), _("title_info"))
            return a
        }
        var edit = {
            "_account_type": table_get_value(tbl_coa, a, 0),
            "_code": table_get_value(tbl_coa, a, 1),
            "_description": table_get_value(tbl_coa, a, 2)
        }
        var d = account_dialog(ctx, edit)
        var r = panel_dialog(d[0], _("title_account_edit"), 
            ctx["dialog_width"], ctx["dialog_height"])
        if (r == "OK") {
            var a = [
                get(d[1], "text"),
                get(d[2], "contents"),
                get(d[3], "contents")
            ]
            if (!is_valid_account(a)) {
                message(_("error_account_invalid"), _("title_error"))
            } else {
                message(a)
            }
        }
    })

    event(b_coa_d, fn() {
        var a = get(tbl_coa, "active")
        if (a < 0) {
            message(_("error_account_delete"), _("title_info"))
            return a
        }
        var del = {
            "_account_type": table_get_value(tbl_coa, a, 0),
            "_code": table_get_value(tbl_coa, a, 1),
            "_description": table_get_value(tbl_coa, a, 2)
        }
        var detail = account_details(del)
        var r = confirm(_("confirm_account_delete") + lf() + detail, _("title_confirm"))
        if (r == "OK") {
            message(del)
        }
    })

    event(btn_save, fn() {
        var _tc = trim(get(tc[1], "contents"))
        if (empty(_tc)) {
            s_text_label(tc, _("error_company_name"), 1)
        } else {
            config(tc[1], "contents", _tc)
            s_text_label(tc, " ", 0)
        }
    })

    event(btn_close, fn() {
        set(ret, "command", "close")
        custom_dialog_close(last(r))
    })

    custom_dialog(g, _("title_setup"), 
        ctx["dialog_width_2"], ctx["dialog_height_2"], 
        false, r)

    return ret
}
